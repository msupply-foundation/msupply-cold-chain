{"version":3,"sources":["types.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA","sourcesContent":["import {\n  ScanMode,\n  Subscription,\n  Characteristic,\n  BleError,\n  Device,\n  ScanOptions,\n  LogLevel,\n} from 'react-native-ble-plx';\n\nimport { BT510, BLUE_MAESTRO } from '../constants';\n\nexport type DeviceType = typeof BT510 | typeof BLUE_MAESTRO; // BT510 | BLUE_MAESTRO\n\nexport interface TypedDevice {\n  id: string;\n  deviceType: DeviceType; // BT510 | BLUE_MAESTRO\n}\n\nexport interface InfoLog {\n  batteryLevel: null | number;\n  isDisabled: boolean;\n}\n\nexport interface SensorLog {\n  temperature: number;\n}\n\nexport interface DataLog {\n  numEvents: number;\n  data: string;\n}\n\nexport interface ScanCallback {\n  (error: BleError | null, deviceDescriptor: string): void;\n}\n\nexport interface Resolver<ResolverResult> {\n  (result: ResolverResult): void;\n}\n\nexport interface ErrorRejector {\n  (error: Error): void;\n}\n\nexport interface MonitorCharacteristicCallback<ResolverResult> {\n  (\n    result: Characteristic | null,\n    resolver: Resolver<ResolverResult>,\n    rejector: ErrorRejector,\n    subscription: Subscription,\n    error: BleError | null\n  ): void;\n}\n\nexport interface MonitorCharacteristicParser<ParserInput, ParserResult> {\n  (result: ParserInput): ParserResult;\n}\n\nexport { ScanMode, Subscription, Characteristic, BleError, Device, ScanOptions, LogLevel };\n"]}